(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{382:function(t,s,e){"use strict";e.r(s);var n=e(45),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"测试和调试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试和调试"}},[t._v("#")]),t._v(" 测试和调试")]),t._v(" "),e("h2",{attrs:{id:"调试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调试"}},[t._v("#")]),t._v(" 调试")]),t._v(" "),e("h3",{attrs:{id:"visual-studio-code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#visual-studio-code"}},[t._v("#")]),t._v(" Visual Studio Code")]),t._v(" "),e("p",[t._v("有关在 "),e("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Visual Studio Code"),e("OutboundLink")],1),t._v(" 中调试主进程和渲染器进程的信息，请参阅 "),e("RouterLink",{attrs:{to:"/zh/guide/recipes.html#debugging-with-vscode"}},[t._v("VSCode 调试方法")]),t._v(" 。")],1),t._v(" "),e("h3",{attrs:{id:"渲染器进程-main-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染器进程-main-app"}},[t._v("#")]),t._v(" 渲染器进程 (Main App)")]),t._v(" "),e("p",[t._v("您可以使用 "),e("a",{attrs:{href:"https://github.com/vuejs/vue-devtools",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue Devtools 调试渲染器进程"),e("OutboundLink")],1),t._v(" 。会为你自动安装 Vue Devtools（由"),e("a",{attrs:{href:"https://github.com/MarshallOfSound/electron-devtools-installer",target:"_blank",rel:"noopener noreferrer"}},[t._v("electron-devtools-installer"),e("OutboundLink")],1),t._v(" 提供支持）。你还可以使用"),e("a",{attrs:{href:"https://developers.google.com/web/tools/chrome-devtools/javascript/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chrome 调试器"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"主进程-background-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主进程-background-file"}},[t._v("#")]),t._v(" 主进程 (Background File)")]),t._v(" "),e("p",[t._v("首先，阅读 "),e("a",{attrs:{href:"https://electronjs.org/docs/tutorial/debugging-main-process",target:"_blank",rel:"noopener noreferrer"}},[t._v("Electron 使用说明"),e("OutboundLink")],1),t._v(" 中关于调试主进程的信息。在通过调试器启动 Electron 之前，在调试模式下执行 "),e("code",[t._v("electron:serve")]),t._v(" 并带上 "),e("code",[t._v("--debug")]),t._v(" 参数。这将阻止 Electron 自动启动并启用 source map 支持。通过将其作为参传递，让 Electron 定位您的输出目录（默认是 "),e("code",[t._v("dist_electron")]),t._v("）（即 "),e("code",[t._v("electron --inspect=5858 dist_electron")]),t._v("）。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("如果您使用 "),e("a",{attrs:{href:"https://electronjs.org/spectron",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spectron"),e("OutboundLink")],1),t._v(" 进行测试，确保设置 "),e("code",[t._v("process.env.IS_TEST")]),t._v(" 为 "),e("code",[t._v("true")]),t._v(" 。这将防止加载开发工具而导致错误。")])]),t._v(" "),e("h2",{attrs:{id:"测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("如果你不想使用 Spectron ，你仍然可以使用这个功能，只需设置 "),e("code",[t._v("noSpectron")]),t._v(" 为 "),e("code",[t._v("true")])])]),t._v(" "),e("p",[t._v("在继续之前，请阅读有关 "),e("a",{attrs:{href:"https://github.com/electron/spectron",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spectron"),e("OutboundLink")],1),t._v(" 的信息。 本指南假定您具备使用 Spectron 的基本知识。")]),t._v(" "),e("p",[t._v("vue-cli-plugin-electron-builder 导出一个 "),e("code",[t._v("testWithSpectron")]),t._v(" 函数。这个函数将运行 "),e("code",[t._v("electron:serve")]),t._v(" ，但不是启动 electron ，而是一个新的 Spectron 应用程序将被创建并附加到开发服务器。这可用于使用 Spectron 运行 e2e 测试。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This example uses Jest, but any testing framework will work as well")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Jest tests MUST run in the node environment, add this to the top of each electron test:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @jest-environment node\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" spectron "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'spectron'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" testWithSpectron "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-cli-plugin-electron-builder'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\njest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a window is created'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Only v2.0+ require you to pass spectron as an arg")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" stdout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stopServe"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" app "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("testWithSpectron")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("spectron"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stdout is the log of electron:serve")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("electron:serve returned: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("stdout"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// url is the url for the dev server created with electron:serve")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("the dev server url is: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// app is a spectron instance. It is attached to the dev server, launched, and waited for to load.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWindowCount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Before your tests end, make sure to stop the dev server and spectron")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopServe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("完整的示例可用于 "),e("a",{attrs:{href:"https://github.com/nklayman/vue-cli-plugin-electron-builder/blob/master/generator/templates/tests-jest/tests/unit/electron.spec.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("jest"),e("OutboundLink")],1),t._v(" 和 "),e("a",{attrs:{href:"https://github.com/nklayman/vue-cli-plugin-electron-builder/blob/master/generator/templates/tests-mocha/tests/unit/electron.spec.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("mocha"),e("OutboundLink")],1),t._v(" 。如果您的项目中已经安装了 jest 或 mocha，它们将随此插件自动添加。")]),t._v(" "),e("p",[e("code",[t._v("testWithSpectron")]),t._v(" 接受一个配置参数。该配置参数具有定义的属性：")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" spectron "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'spectron'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" testWithSpectron "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-cli-plugin-electron-builder'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("testWithSpectron")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Import of spectron, only required for v2.0+")]),t._v("\n  spectron"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  noSpectron"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Disables launching of Spectron. Enable this if you want to launch spectron yourself.")]),t._v("\n  noStart"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not start Spectron app or wait for it to load. You will have to call app.start() and app.client.waitUntilWindowLoaded() before running any tests.")]),t._v("\n  forceDev"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Run dev server in development mode. By default it is run in production (serve --mode production).")]),t._v("\n  mode"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set custom Vue env mode.")]),t._v("\n  spectronOptions"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Custom options to be passed to Spectron. Defaults are already set, only use this if you need something customized.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),e("p",[t._v("确保 spectron 与 electron 一起更新。查看 "),e("a",{attrs:{href:"https://github.com/electron-userland/spectron#version-map",target:"_blank",rel:"noopener noreferrer"}},[t._v("spectron 版本 map"),e("OutboundLink")],1),t._v(" 来确定您应该使用什么版本的 spectron 。")])]),t._v(" "),e("h3",{attrs:{id:"使用-electron-版本的-node-进行常规单元测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-electron-版本的-node-进行常规单元测试"}},[t._v("#")]),t._v(" 使用 Electron 版本的 Node 进行常规单元测试")]),t._v(" "),e("p",[t._v("如果您有 native 依赖项（如 Better-sqlite3），您可能在运行 "),e("code",[t._v("jest")]),t._v(" 时会遇到问题，并出现 native 依赖项 node 版本冲突错误。")]),t._v(" "),e("p",[t._v("要解决此问题，请使用 electron 版本的 node 运行 Jest 测试。这有点 hacky，但这很有效\nTo resolve this, run your Jest tests in the same version of node that electron uses. It's a bit hacky, but this works well:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("TEST_MODE=1 ELECTRON_RUN_AS_NODE=1 ./node_modules/electron/dist/electron ./node_modules/jest/bin/jest.js\n")])])]),e("p",[t._v("您可以 "),e("code",[t._v("test:unit")]),t._v(" 在 package.json 中将其设置为默认使用它而不是默认命令。这是 "),e("a",{attrs:{href:"https://github.com/beekeeper-studio/beekeeper-studio",target:"_blank",rel:"noopener noreferrer"}},[t._v("Beekeeper Studio"),e("OutboundLink")],1),t._v(" 使用的。")])])}),[],!1,null,null,null);s.default=a.exports}}]);